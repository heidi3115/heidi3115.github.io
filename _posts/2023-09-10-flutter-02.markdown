---
layout: post
title:  "[Flutter] Flutter의 initState vs React의 useEffect"

[//]: # (date:   2023-01-02 21:34:36 +0900)

categories: Flutter
---

[//]: # (<h1>Introduction</h1>)


Flutter의 initState와 React의 useEffect는 둘 다 UI 프레임워크에서 상태 관리와 생명 주기 관리를 지원하는데 사용된다.   
하지만 둘은 차이점이 존재하는데, 이번 게시글에서는 Flutter의 initState와 React의 uesEffect에 대해 다뤄보려고 한다.


### 1. Flutter의 'initState'

initState는 Flutter에서 StatefulWidget의 초기화 및 생명 주기 관리를 위해 사용된다.   
initState는 StatefulWidget이 처음 생성될 때 한 번만 실행되며, 그 이후에는 실행되지 않는다는 특징이 있다.   

```javascript

class Example extends StatefulWidget {
  @override
  _ExampleState createState() => _ExampleState();
}

class _ExampleState extends State<Example> {
  @override
  void initState() {
    super.initState();
    // 초기 설정 및 데이터 호출 등을 실행함
  }

  @override
  Widget build(BuildContext context) { // UI 생성을 위한 build 메서드
    .
    .
    .
    
  }
}


```

1. initState는 위젯이 처음 생성될 때 한 번 실행된다.
2. 상태 초기화 및 초기 설정에 사용.
3. UI 생성을 위한 build 메서드와 함께 사용한다.



### 2. React의 'useEffect'

React의 useEffect는 함수형 컴포넌트에서 생명 주기 관리를 위해 사용한다.   
useEffect는 컴포넌트가 렌더링될 때, 업데이트될 때, 또는 언마운트될 때 특정 작업을 수행한다.

```javascript

function Example() {
  useEffect(() => {
    //실행할 작업  
  }, []); // 의존성 배열, 배열 값이 변경될 때 useEffect가 재실행됨

  // 컴포넌트 렌더링
}

```



1. 컴포넌트가 렌더링되거나 업데이트될 때 실행된다.
2. 두 번째 매개변수로 의존성 배열을 전달하며, 이 배열에 포함된 값들이 변경될 때 여러번 useEffect의 콜백이 호출된다.



 initState와 useEffect는 비슷하지만 목적과 사용 방법에서 차이가 있는 것을 알 수 있다.   
 Flutter에서는 initState와 build 메서드를 사용하여 초기화 및 UI를 구성하고,   
 React에서는 useEffect를 사용하여 렌더링과 그 밖의 작업들을 실행하는데 효과적이라고 볼 수 있겠다.