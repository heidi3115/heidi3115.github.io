---
layout: post
title:  "연속된 수의 합"

[//]: # (date:   2023-01-02 21:34:36 +0900)

categories: Javascript
---

[//]: # (<h1>Introduction</h1>)

### 문제

<div class="text">
연속된 세 개의 정수를 더해 12가 되는 경우는 3, 4, 5입니다.<br /> 
두 정수 num과 total이 주어집니다. <br />연속된 수 num개를 더한 값이 total이 될 때,   
정수 배열을 오름차순으로 담아 return하도록 solution함수를 완성해보세요.
</div>


### 제한사항
<div>
1 ≤ num ≤ 100
0 ≤ total ≤ 1000
num개의 연속된 수를 더하여 total이 될 수 없는 테스트 케이스는 없습니다.
</div>


### 풀이

이 문제는 연속된 `n개의 정수`를 더한 값을 `total` 이라고 하고, 해당 `n개의 정수`를 배열로 반환하는 문제이다.

    function solution(num, total) {
        const arr = []
        const firstNumber = Math.ceil(total / num - Math.floor(num / 2))
        >> total / num으로 연속될 숫자의 중간 값을 구하여
           중간 값에서 num / 2의 값에 내림을 해서 구한 값을 빼고
           그 값을 올려 초기값을 만듦
        
        for(let i=0; i < num; i++) {
            arr.push(firstNumber+i)
        >> 초기값을 시작으로 num 숫자만큼 반복하여 배열을 완성한다.
        }
        
        return arr
    }

- Math.ceil(): 주어진 숫자보다 크거나 같은 숫자 중 가장 작은 숫자를 integer 로 반환한다. 천장(ceil)에 닿는다고 생각하여 외우면 편하다.
- Math.floor(): 숫자를 가장 가까운 정수 또는 지정된 유의값의 배수로 내린다. 바닥(floor)에 붙는다고 생각하여 외우면 편하다.


<style>
.text {
    border: 1px solid #dcdcdc;
    padding: 10px;
}
</style>