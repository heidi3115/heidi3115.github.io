---
layout: post
title:  "CORS와 Proxy"

[//]: # (date:   2023-01-02 21:34:36 +0900)

categories: IT
---

[//]: # (<h1>Introduction</h1>)

### CORS와 Proxy

지난 포스트에서 설명했듯이, 클라이언트와 서버가 포트가 다른 상태에서 클라이언트 측에서 서버 측으로 무언가 요청했을 때,   
브라우저가 보안상의 이유로 요청을 차단하는 문제이다.

예를 들어 클라이언트의 포트가 80이고, 서버의 포트가 8080으로 열려있으면 보안상의 이유로 차단되는 것이다.
이를 해결할 수 있는 방법 중의 하나가 `Proxy(프록시)`다.




### Proxy란?
프록시는 대리인이라는 뜻으로, 프로토콜에 있어서는 `대리로 응답해주는 역할`로 정의할 수 있겠다.   
프록시를 사용하지 않을 경우에는 User와 Server가 데이터를 서로 전달하게 된다.


- 프록시를 사용하지 않을 경우

<img src="/assets/itPost/itPost_Proxy_1.jpg">

프록시를 사용할 경우에는 User와 Server간에 가상의 프록시 서버가 존재하게 된다.

- 프록시를 사용할 경우

<img src="/assets/itPost/itPost_Proxy_2.jpg">


특정 IP를 가진 유저가 인터넷에 어떠한 요청을 하게 되는 경우에 IP가 전달되는데, 인터넷에서 유저의 IP를 받을 때 프록시 서버가 임의로 유저의 IP를 변경할 수 있다.   
즉, 인터넷쪽에서 유저의 실제 IP를 알 수 없도록 하는 것이 프록시 서버의 역할이다.



### 프록시 서버를 사용하는 이유

1. 특정 사이트에 들어갈 수 없도록 방지할 수 있다.
2. 캐시를 이용하여 더 빠른 인터넷 이용 환경을 제공한다.
3. 더 나은 보안을 제공한다 (IP를 바꿔서 보내주기 때문에 보안상 더 안전)



### webpack 개발서버 프록시 적용

.webpack 설정파일에 proxy 추가

```javascript
proxy: {
      '/api/': { // /api/로 시작하는 url은 아래의 전체 도메인을 추가하고, 옵션을 적용 
        target: 'http://localhost:1234', // 클라이언트에서 api로 보내는 요청은 주소를 1234로 바꿔서 보내겠다 라는 뜻
        changeOrigin: true, // cross origin 허용 설정
      },
    },
```

- react 프로젝트에서는 package.json파일에 설정해준다.
- vite로 서버를 구동하는 환경에서는 vite.config.json 파일에서 proxy를 설정해준다.