---
layout: post
title:  "틸드 연산자 / 더블 틸드 연산자"

[//]: # (date:   2023-01-02 21:34:36 +0900)

categories: Javascript
---

[//]: # (<h1>Introduction</h1>)


코딩 테스트 문제를 풀면서 다른 사람들이 푼 답안을 보게되는데, 한번씩 보이는 틸드(~) 연산자는 대체 무엇인지 궁금하여   
이번 글을 작성한다.




## 틸드(~) 연산자
 틸드 연산자는 비트 단위의 연산자로, 10진수를 2진수로 바꿔버린 후 연산을 진행한다.
또한 비트 단위 연산자 중, NOT을 진행하는 연산자라고 한다.

작동원리는 다음과 같다

        const test = 5   //// 0000000000000101
        console.log(~test) //// 1111111111111010 -> -6




## 더블 틸드(~~) 연산자
 더블 틸드 연산자는 틸드 연산자를 두번 반복해주는 것이다. 위에서 작성한 코드에 더블 틸드 연산자를 적용하면 console 결과는 어떻게 나올까?
 
답은 처음에 넣어줬던 값 그대로 `5`다.
말그대로 틸드 연산자를 한번 더 반복해주는 것이기 때문에, -6으로 바뀌었던 숫자를 다시한번 뒤집어주어 5라는 값을 확인할 수 있는 것이다.

단순히 두번 반복되는 연산자라면 굳이 따로 존재하지 않았겠지만, 더블 틸드 연산자는 `Math.floor()`처럼 사용할 수도 있다.
숫자에 ~연산을 하면서 소수점 숫자들이 버려지게 되기 때문이다.



## 장점과 단점

틸드 연산자는 잘 사용하면 Math.floor()과 parseInt 보다 빠른 속도로 작업을 처리할 수 있다는 장점을 가지고 있다.
그러나 코드에 계속해서 수 많은 틸드 연산자가 존재한다면 가독성이 떨어져 한 눈에 코드를 파악하기가 쉽지 않기 때문에, 이 점을 주의해야 한다.