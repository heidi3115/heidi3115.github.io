---
layout: post
title:  "컨트롤 제트"

[//]: # (date:   2023-01-02 21:34:36 +0900)

categories: Javascript
---

[//]: # (<h1>Introduction</h1>)

### 문제

<div class="text">
숫자와 "Z"가 공백으로 구분되어 담긴 문자열이 주어집니다. <br />
문자열에 있는 숫자를 차례대로 더하려고 합니다. 이 때 "Z"가 나오면 바로 전에 더했던 숫자를 뺀다는 뜻입니다. <br /> 
숫자와 "Z"로 이루어진 문자열 s가 주어질 때, 머쓱이가 구한 값을 return 하도록 solution 함수를 완성해보세요.
</div>


### 제한사항

- 1 ≤ s의 길이 ≤ 200
- -1,000 < s의 원소 중 숫자 < 1,000
- s는 숫자, "Z", 공백으로 이루어져 있습니다.
- s에 있는 숫자와 "Z"는 서로 공백으로 구분됩니다.
- 연속된 공백은 주어지지 않습니다.
- 0을 제외하고는 0으로 시작하는 숫자는 없습니다.
- s는 "Z"로 시작하지 않습니다.
- s의 시작과 끝에는 공백이 없습니다.
- "Z"가 연속해서 나오는 경우는 없습니다.


### 풀이

이 문제는 공백과 문자로 이루어진 문자열을 순서대로 모두 더하는데, `Z`를 마주치면 바로 직전에 있던 숫자로 바꾸어 그 숫자만큼 뺄셈하여 푸는 문제이다.

예: `1 2 Z 3 -> 1+2-2(Z)+3`

    function solution(s) {
        var answer = 0;
        const a = s.split(' ') // 공백과 문자로 이루어진 문자열인 s의 공백을 split으로 제거
        
        for(let i = 0; i<a.length; i++) {
            if(a[i] === 'Z') { // a의 i번째 요소가 Z라면?
                answer = answer - Number(a[i-1]) // 여태 더한거에서 직전에 더한 값 빼기
            }else { // 그게아니라 그냥 숫자라면?
                answer = answer + Number(a[i]) // 계속 더하기
            }
        }
        
        return answer;
    }

- split(): 문자열에서 `separator`가 등장하면 해당 부분은 삭제되고 남은 문자열이 배열로 반환된다.
    예: array.split(' '): 공백(' ')이라는 separator를 지정하여 공백을 삭제하고 나머지 부분을 배열로 반환한다.

<style>
.text {
    border: 1px solid #dcdcdc;
    padding: 10px;
}
</style>