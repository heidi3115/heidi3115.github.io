[
  
    {
      "title"    : "정보처리기사 필기 시험 후기 &amp; 준비물 &amp; 주의사항",
      "title-lower"    : "정보처리기사 필기 시험 후기 &amp; 준비물 &amp; 주의사항",
      "sub-titile" : "",
      "sub-titile-lower" : "",
      "categories" : "Notes",
      "tags"     : "",
      "url"      : "/notes/2023/03/13/study-1.html",
      "date"     : "2023-03-13 00:00:00 +0900",
      "content"     : "정보처리기사 2023년 1회 필기 시험 합격 후기1. 정보처리기사 시험 응시 계기나는 비전공자로, 1년 넘게 프론트앤드 개발자로서 실무를 하면서 혹은 공부를 하면서 부딪히는 전문 용어가 굉장히 낯설게 느껴질때가 종종 있었다. 학점은행제로 컴공 전공을 해볼까 생각도 했지만 시간도 부족했고 무엇보다 금전적인 여유가 많지 않아 정보처리기사를 독학으로 따는 ..."
    } ,
  
    {
      "title"    : "CORS와 Proxy",
      "title-lower"    : "cors와 proxy",
      "sub-titile" : "",
      "sub-titile-lower" : "",
      "categories" : "IT",
      "tags"     : "",
      "url"      : "/it/2023/03/05/itPost-Proxy.html",
      "date"     : "2023-03-05 00:00:00 +0900",
      "content"     : "CORS와 Proxy지난 포스트에서 설명했듯이, 클라이언트와 서버가 포트가 다른 상태에서 클라이언트 측에서 서버 측으로 무언가 요청했을 때, 브라우저가 보안상의 이유로 요청을 차단하는 문제이다.예를 들어 클라이언트의 포트가 80이고, 서버의 포트가 8080으로 열려있으면 보안상의 이유로 차단되는 것이다.이를 해결할 수 있는 방법 중의 하나가 Proxy..."
    } ,
  
    {
      "title"    : "CORS",
      "title-lower"    : "cors",
      "sub-titile" : "",
      "sub-titile-lower" : "",
      "categories" : "IT",
      "tags"     : "",
      "url"      : "/it/2023/02/26/itPost-CORS.html",
      "date"     : "2023-02-26 00:00:00 +0900",
      "content"     : "CORS란?CORS는 Cross Origin Resource Sharing의 약자이다. 출처가 다른 자원들을 공유한다는 뜻으로, 한 출처에 있는 자원에서 다른 출처에 있는 자원에 접근하도록 하는 개념이다. 브라우저의 보안과 관련하여 아주 중요한 역할을 수행하기 때문에 존재하는데, 아래에서 자세히 알아보자.1. 출처 (Origin)CORS에 대해 이해하..."
    } ,
  
    {
      "title"    : "강의 정리 - HTML / CSS 소개",
      "title-lower"    : "강의 정리 - html / css 소개",
      "sub-titile" : "",
      "sub-titile-lower" : "",
      "categories" : "Javascript",
      "tags"     : "",
      "url"      : "/javascript/2023/02/19/javascript-06.html",
      "date"     : "2023-02-19 00:00:00 +0900",
      "content"     : "코딩 테스트 문제를 풀면서 다른 사람들이 푼 답안을 보게되는데, 한번씩 보이는 틸드(~) 연산자는 대체 무엇인지 궁금하여 이번 글을 작성한다.틸드(~) 연산자틸드 연산자는 비트 단위의 연산자로, 10진수를 2진수로 바꿔버린 후 연산을 진행한다.또한 비트 단위 연산자 중, NOT을 진행하는 연산자라고 한다.작동원리는 다음과 같다    const test..."
    } ,
  
    {
      "title"    : "강의 정리 - HTML / CSS 소개",
      "title-lower"    : "강의 정리 - html / css 소개",
      "sub-titile" : "",
      "sub-titile-lower" : "",
      "categories" : "Javascript",
      "tags"     : "",
      "url"      : "/javascript/2023/02/19/javascript-05.html",
      "date"     : "2023-02-19 00:00:00 +0900",
      "content"     : "반복문은 어떠한 작업 혹은 코드들의 반복적인 실행이 필요할 때 사용하는 문법으로, 불필요한 중복 코드들을 최소화할 수 있어 잘 알아두면 쓸 데가 무척 많다.자바스크립트에서는 for, while 두가지 반복문을 주로 사용하는데, 둘은 비슷해보이지만 명백한 차이점을 가지고 있다.어떨 때 for문을 사용하고, 어떨 때 while문을 사용하는지 알아보자.fo..."
    } ,
  
    {
      "title"    : "강의 정리 - HTML / CSS 소개",
      "title-lower"    : "강의 정리 - html / css 소개",
      "sub-titile" : "",
      "sub-titile-lower" : "",
      "categories" : "Notes",
      "tags"     : "",
      "url"      : "/notes/2023/02/12/classNotes-HTML-CSS.html",
      "date"     : "2023-02-12 00:00:00 +0900",
      "content"     : "HTML이란?HTML은 Hyper Text Markup Language의 약자로 웹 페이지를 만들 때 사용하는 자료 구조 표현 언어를 뜻한다. 자료는 마음대로 표현하는 것이 아니라 HTML의 정해진 태그로 나눠두어 자료의 구조를 표현할 수 있어야 한다.HTML에서 사용하는 태그들은 다음과 같다.  &amp;lt;p&amp;gt;&amp;lt;/p&am..."
    } ,
  
    {
      "title"    : "http의 구조 / 요소",
      "title-lower"    : "http의 구조 / 요소",
      "sub-titile" : "",
      "sub-titile-lower" : "",
      "categories" : "IT",
      "tags"     : "",
      "url"      : "/it/2023/02/05/itPost-HTTP.html",
      "date"     : "2023-02-05 00:00:00 +0900",
      "content"     : "HTTP의 구조HTTP는 HTML 문서와 같은 텍스트로 되어있는 리소스(데이터)들을 가져올 수 있도록 해주는 프로토콜(통신규약)이다. 프로토콜이란 컴퓨터들끼리 HTML 파일을 주고받을 수 있게 도와주는 소통방식 또는 약속이다.클라이언트와 서버 간의 통신을 효율적으로 하기 위한 HTTP의 특징에 대해 적어보겠다.ConnectionlessHTTP의 첫번째..."
    } ,
  
    {
      "title"    : "Javascript-04. Promise.all / Promise.race",
      "title-lower"    : "javascript-04. promise.all / promise.race",
      "sub-titile" : "",
      "sub-titile-lower" : "",
      "categories" : "Javascript",
      "tags"     : "",
      "url"      : "/javascript/2023/01/28/javascript-04.html",
      "date"     : "2023-01-28 00:00:00 +0900",
      "content"     : "Javascript-04. Promise.all / Promise.race앞서 작성한 글들을 통해 자바스크립트에서 promise와 async/await를 사용하여 비동기 작업을 쉽게 사용하는 방법도 알아보았다.그렇다면 여러 개의 비동기 처리를 한 번에 하고 싶다면 어떻게 해야할까?우선 여러 개의 promise를 작성해보자.function wait (s..."
    } ,
  
    {
      "title"    : "Javascript-03. async와 await",
      "title-lower"    : "javascript-03. async와 await",
      "sub-titile" : "",
      "sub-titile-lower" : "",
      "categories" : "Javascript",
      "tags"     : "",
      "url"      : "/javascript/2023/01/22/javascript-03.html",
      "date"     : "2023-01-22 00:00:00 +0900",
      "content"     : "Javascript-03. async와 await이번에는 자바스크립트에서 비동기 처리 작업을 할 때 promise를 좀 더 쉽게 사용할 수 있게 해주는 async/await 라는 문법에 대해 작성하겠다.우선 promise를 만드는 함수를 작성해보자function wait (sec) {    return new Promise (resolve =&amp;..."
    } ,
  
    {
      "title"    : "Javascript-02. Promise",
      "title-lower"    : "javascript-02. promise",
      "sub-titile" : "",
      "sub-titile-lower" : "",
      "categories" : "Javascript",
      "tags"     : "",
      "url"      : "/javascript/2023/01/15/javascript-02.html",
      "date"     : "2023-01-15 00:00:00 +0900",
      "content"     : "Javascript-02. PromisePromise는 비동기 작업을 편하게 처리할 수 있도록 ES6에 도입된 기능이다.그 전까지는 비동기 작업을 위해 callBack함수로 처리를 해야했는데, 비동기 작업이 많아질 경우 코드가 너무 깊어지고 복잡해져 한 눈에 보기 힘들다는 단점이 있었다.📍 Promise는 원래 라이브러리로 존재했지만, 인기가 많아지고..."
    } ,
  
    {
      "title"    : "React의 라이프 사이클 메서드",
      "title-lower"    : "react의 라이프 사이클 메서드",
      "sub-titile" : "",
      "sub-titile-lower" : "",
      "categories" : "",
      "tags"     : "",
      "url"      : "/2023/01/08/react-life-cycle-method.html",
      "date"     : "2023-01-08 00:00:00 +0900",
      "content"     : "React의 Hooks 1. useEffect모든 리액트 컴포넌트에는 라이프사이클이 존재한다.라이프 사이클(life-cycle)이란 직역하자면 생명 주기라는 뜻이다.컴포넌트의 수명은 페이지 준비 과정에서 시작되어 페이지에서 사라질때 끝난다.첫 렌더링에 특정 작업이 함께 이루어져야 하는 경우 혹은 컴포넌트를 업데이트 하기 전과 하고 나서 처리해야 하는 ..."
    } ,
  
    {
      "title"    : "Javascript-01. 동기 / 비동기 처리",
      "title-lower"    : "javascript-01. 동기 / 비동기 처리",
      "sub-titile" : "",
      "sub-titile-lower" : "",
      "categories" : "Javascript",
      "tags"     : "",
      "url"      : "/javascript/2023/01/08/javascript-01.html",
      "date"     : "2023-01-08 00:00:00 +0900",
      "content"     : "Javascript-01. 동기 / 비동기 처리이번 글에서는 자바스크립트에서 비동기 처리를 어떻게 하는지에 대해서 작성하겠다.우선 동기적 처리와 비동기적 처리가 어떻게 다른지에 대한 설명을 아래 그림을 통해 알아보자.작업을 동기적으로 처리하게 된다면, 그림의 동기적 처리 부분처럼 순차적으로 작업을 진행하게 된다.작업이 끝날때까지 기다리는 동안 중지상태..."
    } 
  
]